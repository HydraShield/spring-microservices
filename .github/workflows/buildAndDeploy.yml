
name: Workflow for Build java service and deploy docker image on ECR

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      service-directory:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_session_token:
        required: true

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: microservice

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout for ${{ inputs.service-name }}
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-session-token: ${{ secrets.aws_session_token }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          cache: maven

      - name: Build ${{ inputs.service-name }} with Maven and Push Docker Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ inputs.service-name }}-latest
        run: |
          cd ${{ inputs.service-directory }}
          mvn clean install
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
