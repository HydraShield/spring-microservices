
name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop"]
  pull_request:
    branches: [ "main", "develop"]

env:
  AWS_REGION: us-east-1

jobs:
  build-deploy-service-1:
#    if: contains(github.event.head_commit.modified, 'service-1/**') || contains(github.event.head_commit.modified, '.github/workflows/**')
    uses: ./.github/workflows/buildAndDeploy.yml
    with:
      service-name: service-1
      service-directory: service-1

  build-deploy-service-2:
#    if: contains(github.event.head_commit.modified, 'service-2/**') || contains(github.event.head_commit.modified, '.github/workflows/**')
    uses: ./.github/workflows/buildAndDeploy.yml
    with:
      service-name: service-2
      service-directory: service-2

  build-deploy-service-3:
#    if: contains(github.event.head_commit.modified, 'service-3/**') || contains(github.event.head_commit.modified, '.github/workflows/**')
    uses: ./.github/workflows/buildAndDeploy.yml
    with:
      service-name: service-3
      service-directory: service-3

  deploy-to-fargate:
    runs-on: ubuntu-latest

    needs:
      - build-deploy-service-1
      - build-deploy-service-2
      - build-deploy-service-3

    steps:
      - name: Checkout for deployment
        uses: actions/checkout@v3.1.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Download Targeted JAR
        uses: actions/download-artifact@v3
        with:
          name: service-1
          path: service-1/target/

      - name: Download Targeted JAR
        uses: actions/download-artifact@v3
        with:
          name: service-2
          path: service-2/target/

      - name: Download Targeted JAR
        uses: actions/download-artifact@v3
        with:
          name: service-3
          path: service-3/target/

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Serverless framework
        run: npm install -g serverless

      - name: Install serverless-fargate plugin
        run: serverless plugin install -n serverless-fargate

      - name: deploy application
        run: sls deploy --stage dev
